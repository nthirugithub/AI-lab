def bfs(graph, start, goal):
    from collections import deque
    visited = set()
    q = deque([(start, [start])])
    while q:
        node, path = q.popleft()
        if node == goal:
            print("Path:", path)
            return
        if node in visited: continue
        visited.add(node)
        for nei in graph[node]:
            q.append((nei, path + [nei]))
graph = {
    0: [1, 2],
    1: [0, 2, 3],
    2: [0, 1, 3],
    3: [1, 2, 4],
    4: [3]
}
bfs(graph, 0, 4)
